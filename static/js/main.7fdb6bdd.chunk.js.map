{"version":3,"sources":["components/Icons.js","App.js","index.js"],"names":["Icons","name","className","itemArray","Array","fill","App","useState","isCross","setIsCross","winMessage","setWinMessage","changeItem","itemNumber","toast","type","Container","position","Row","Col","md","onClick","map","item","index","Card","CardBody","ReactDOM","render","document","getElementById"],"mappings":"wQAceA,EAXD,SAAC,GACb,OAD0B,EAAXC,MAEb,IAAK,SACH,OAAO,kBAAC,IAAD,CAAaC,UAAU,UAChC,IAAK,QACH,OAAO,kBAAC,IAAD,CAASA,UAAU,UAC5B,QACE,OAAO,kBAAC,IAAD,CAAOA,UAAU,YCDxBC,G,YAAY,IAAIC,MAAM,GAAGC,KAAK,UA+GrBC,EA7GH,WAAO,IAAD,EACcC,oBAAS,GADvB,mBACTC,EADS,KACAC,EADA,OAEoBF,mBAAS,IAF7B,mBAETG,EAFS,KAEGC,EAFH,KA+DVC,EAAa,SAACC,GAClB,OAAIH,EACKI,YAAMJ,EAAY,CAAEK,KAAM,YAEL,UAA1BZ,EAAUU,GAILC,YAAM,uBAAwB,CAAEC,KAAM,WAH7CZ,EAAUU,GAAcL,EAAU,QAAU,SAC5CC,GAAYD,QAxDZL,EAAU,KAAOA,EAAU,IAC3BA,EAAU,KAAOA,EAAU,IACV,UAAjBA,EAAU,GAEVQ,EAAc,GAAD,OAAIR,EAAU,GAAd,SAEI,UAAjBA,EAAU,IACVA,EAAU,KAAOA,EAAU,IAC3BA,EAAU,KAAOA,EAAU,GAE3BQ,EAAc,GAAD,OAAIR,EAAU,GAAd,SAEI,UAAjBA,EAAU,IACVA,EAAU,KAAOA,EAAU,IAC3BA,EAAU,KAAOA,EAAU,GAE3BQ,EAAc,GAAD,OAAIR,EAAU,GAAd,SAEI,UAAjBA,EAAU,IACVA,EAAU,KAAOA,EAAU,IAC3BA,EAAU,KAAOA,EAAU,GAE3BQ,EAAc,GAAD,OAAIR,EAAU,GAAd,SAEI,UAAjBA,EAAU,IACVA,EAAU,KAAOA,EAAU,IAC3BA,EAAU,KAAOA,EAAU,GAE3BQ,EAAc,GAAD,OAAIR,EAAU,GAAd,SAEI,UAAjBA,EAAU,IACVA,EAAU,KAAOA,EAAU,IAC3BA,EAAU,KAAOA,EAAU,GAE3BQ,EAAc,GAAD,OAAIR,EAAU,GAAd,SAEI,UAAjBA,EAAU,IACVA,EAAU,KAAOA,EAAU,IAC3BA,EAAU,KAAOA,EAAU,GAE3BQ,EAAc,GAAD,OAAIR,EAAU,GAAd,SAEI,UAAjBA,EAAU,IACVA,EAAU,KAAOA,EAAU,IAC3BA,EAAU,KAAOA,EAAU,IAE3BQ,EAAc,GAAD,OAAIR,EAAU,GAAd,YAkBjB,OACE,kBAACa,EAAA,EAAD,CAAWd,UAAU,OACnB,kBAAC,IAAD,CAAgBe,SAAS,kBACzB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,EAAGlB,UAAU,eACnBQ,EACC,6BACE,wBAAIR,UAAU,gCAAgCQ,GAC9C,4BAAQR,UAAU,kBAAkBmB,QAjF7B,WACjBZ,GAAW,GACXE,EAAc,IACdR,EAAUE,KAAK,QAAS,EAAG,KA8EjB,oBAKF,wBAAIH,UAAU,gCACXM,EAAU,QAAU,SADvB,UAIF,yBAAKN,UAAU,QACZC,EAAUmB,KAAI,SAACC,EAAMC,GAAP,OACb,kBAACC,EAAA,EAAD,CAAMJ,QAAS,kBAAMT,EAAWY,KAC9B,kBAACE,EAAA,EAAD,CAAUxB,UAAU,OAClB,kBAAC,EAAD,CAAMD,KAAMsB,cCzG9BI,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.7fdb6bdd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FaTimes, FaPen, FaRegCircle } from \"react-icons/fa\";\r\n\r\nconst Icons = ({ name }) => {\r\n  switch (name) {\r\n    case \"circle\":\r\n      return <FaRegCircle className=\"icons\" />;\r\n    case \"cross\":\r\n      return <FaTimes className=\"icons\" />;\r\n    default:\r\n      return <FaPen className=\"icons\" />;\r\n  }\r\n};\r\n\r\nexport default Icons;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { Button, Container, Card, CardBody, Col, Row } from \"reactstrap\";\r\nimport Icon from \"./components/Icons\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./App.css\";\r\n\r\nconst itemArray = new Array(9).fill(\"empty\");\r\n\r\nconst App = () => {\r\n  const [isCross, setIsCross] = useState(false);\r\n  const [winMessage, setWinMessage] = useState(\"\");\r\n\r\n  const reloadGame = () => {\r\n    setIsCross(false);\r\n    setWinMessage(\"\");\r\n    itemArray.fill(\"empty\", 0, 9);\r\n  };\r\n\r\n  const checkIsWinner = () => {\r\n    //  checking  winner of the game\r\n    if (\r\n      itemArray[0] === itemArray[1] &&\r\n      itemArray[0] === itemArray[2] &&\r\n      itemArray[0] !== \"empty\"\r\n    ) {\r\n      setWinMessage(`${itemArray[0]} won`);\r\n    } else if (\r\n      itemArray[3] !== \"empty\" &&\r\n      itemArray[3] === itemArray[4] &&\r\n      itemArray[4] === itemArray[5]\r\n    ) {\r\n      setWinMessage(`${itemArray[3]} won`);\r\n    } else if (\r\n      itemArray[6] !== \"empty\" &&\r\n      itemArray[6] === itemArray[7] &&\r\n      itemArray[7] === itemArray[8]\r\n    ) {\r\n      setWinMessage(`${itemArray[6]} won`);\r\n    } else if (\r\n      itemArray[0] !== \"empty\" &&\r\n      itemArray[0] === itemArray[3] &&\r\n      itemArray[3] === itemArray[6]\r\n    ) {\r\n      setWinMessage(`${itemArray[0]} won`);\r\n    } else if (\r\n      itemArray[1] !== \"empty\" &&\r\n      itemArray[1] === itemArray[4] &&\r\n      itemArray[4] === itemArray[7]\r\n    ) {\r\n      setWinMessage(`${itemArray[1]} won`);\r\n    } else if (\r\n      itemArray[2] !== \"empty\" &&\r\n      itemArray[2] === itemArray[5] &&\r\n      itemArray[5] === itemArray[8]\r\n    ) {\r\n      setWinMessage(`${itemArray[2]} won`);\r\n    } else if (\r\n      itemArray[0] !== \"empty\" &&\r\n      itemArray[0] === itemArray[4] &&\r\n      itemArray[4] === itemArray[8]\r\n    ) {\r\n      setWinMessage(`${itemArray[0]} won`);\r\n    } else if (\r\n      itemArray[2] !== \"empty\" &&\r\n      itemArray[2] === itemArray[4] &&\r\n      itemArray[4] === itemArray[6]\r\n    ) {\r\n      setWinMessage(`${itemArray[2]} won`);\r\n    }\r\n  };\r\n\r\n  const changeItem = (itemNumber) => {\r\n    if (winMessage) {\r\n      return toast(winMessage, { type: \"success\" });\r\n    }\r\n    if (itemArray[itemNumber] === \"empty\") {\r\n      itemArray[itemNumber] = isCross ? \"cross\" : \"circle\";\r\n      setIsCross(!isCross);\r\n    } else {\r\n      return toast(\"Item allready filled\", { type: \"error\" });\r\n    }\r\n\r\n    checkIsWinner();\r\n  };\r\n\r\n  return (\r\n    <Container className=\"p-5\">\r\n      <ToastContainer position=\"bottom-center\" />\r\n      <Row>\r\n        <Col md={6} className=\"offset-md-3\">\r\n          {winMessage ? (\r\n            <div>\r\n              <h1 className=\"text-success m-3 text-center\">{winMessage}</h1>\r\n              <button className=\"btn btn-success\" onClick={reloadGame}>\r\n                Reload the game\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <h1 className=\"text-warning text-center m-3\">\r\n              {isCross ? \"cross\" : \"circle\"} turns\r\n            </h1>\r\n          )}\r\n          <div className=\"grid\">\r\n            {itemArray.map((item, index) => (\r\n              <Card onClick={() => changeItem(index)}>\r\n                <CardBody className=\"box\">\r\n                  <Icon name={item} />\r\n                </CardBody>\r\n              </Card>\r\n            ))}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}